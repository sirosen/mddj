[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "mddj"
version = "0.0.8"
description = 'A CLI for extracting python metadata from packages'
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
keywords = []
authors = [
  { name = "Stephen Rosen", email = "sirosen@globus.org" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  # although 'wheel' is not used directly, any use of non-isolated builds
  # will need it, so including it makes a wider range of usages work smoothly
  "wheel",
  "packaging",
  "build>=0.10.0",
  "click",
  'tomli;python_version<"3.11"',
]

[project.urls]
source = "https://github.com/sirosen/mddj"
changelog = "https://github.com/sirosen/mddj/blob/main/CHANGELOG.md"

[project.scripts]
mddj = "mddj.cli:main"


[tool.coverage.run]
parallel = true
source = ["mddj"]
[tool.coverage.paths]
source = [
    "src/",
    "*/site-packages/",
]
[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    # the pragma to disable coverage
    "pragma: no cover",
    # don't complain if tests don't hit unimplemented methods/modes
    "raise NotImplementedError",
    # don't check on executable components of importable modules
    "if __name__ == .__main__.:",
    # mypy-only code segments
    "if t.TYPE_CHECKING:",
    # type-checking overloads
    "@t.overload"
]

[tool.mypy]
strict = true
ignore_missing_imports = true
disallow_subclassing_any = false
files = ["src"]

[tool.isort]
profile = "black"
known_first_party = ["mddj"]
